import { normalize, valueToBigNumber } from '../../bignumber';
import { LTV_PRECISION } from '../../constants';
export function formatEModeCategory(eModeCategory) {
    return Object.assign(Object.assign({}, eModeCategory), { formattedLtv: normalize(eModeCategory.ltv, LTV_PRECISION), formattedLiquidationThreshold: normalize(eModeCategory.liquidationThreshold, LTV_PRECISION), formattedLiquidationBonus: normalize(valueToBigNumber(eModeCategory.liquidationBonus).minus(10 ** LTV_PRECISION), 4) });
}
export function formatEModes(eModes) {
    return eModes.map(eMode => (Object.assign(Object.assign({}, eMode), { eMode: formatEModeCategory(eMode.eMode) })));
}
export function getReservesEModes(reserveId, eModes) {
    return eModes.reduce((acc, eMode) => {
        const { borrowableBitmap, collateralBitmap } = eMode.eMode;
        const borrowingEnabled = borrowableBitmap[borrowableBitmap.length - reserveId - 1] === '1';
        const collateralEnabled = collateralBitmap[collateralBitmap.length - reserveId - 1] === '1';
        if (borrowingEnabled || collateralEnabled) {
            acc.push({
                id: eMode.id,
                collateralEnabled,
                borrowingEnabled,
                eMode: eMode.eMode,
            });
        }
        return acc;
    }, []);
}
export function getAndFormatReserveEModes(reserveId, eModes) {
    return getReservesEModes(reserveId, eModes).map(eMode => (Object.assign(Object.assign({}, eMode), { eMode: formatEModeCategory(eMode.eMode) })));
}
//# sourceMappingURL=index.js.map